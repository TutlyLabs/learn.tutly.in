---
import RootLayout from "@/layouts/RootLayout.astro";
import { actions } from "astro:actions";
import AttendanceClient from "./_components/Attendancefilters";
import db from "@/lib/db";
import type { Course, Class } from "@prisma/client";

const currentUser = Astro.locals.user;

const call = Astro.callAction;

const { data: attendance } = await call(actions.attendances_getAttendanceOfAllStudents, {});

let courses = await db.course.findMany({
  where: {
    enrolledUsers: {
      some: {
        username: currentUser?.username || "",
      },
    },
  },
  include: {
    classes: true,
    createdBy: {
      select: {
        id: true,
        username: true,
        name: true,
        image: true,
        email: true,
        role: true,
        createdAt: true,
        updatedAt: true,
      },
    },
    _count: {
      select: {
        classes: true,
      },
    },
    courseAdmins: {
      select: {
        id: true,
        username: true,
        name: true,
        image: true,
        email: true,
        role: true,
        createdAt: true,
        updatedAt: true,
      },
    },
  },
});

courses.forEach((course: Course & { classes: Class[] }) => {
  course.classes.sort((a: any, b: any) => {
    return Number(a.createdAt) - Number(b.createdAt);
  });
});

if (currentUser?.role !== "INSTRUCTOR") {
  const publishedCourses = courses.filter((course) => course.isPublished);
  courses = publishedCourses;
}
---

<RootLayout title="Attendance">
  <div>
    <AttendanceClient
      attendance={attendance?.data ?? ""}
      courses={courses}
      role={currentUser?.role ?? ""}
      client:load
    />
  </div>
</RootLayout>
