---
import RootLayout from "@layouts/RootLayout.astro";
import TutorStats from "./page";
import { createServerCaller } from "@/trpc/server";

const currentUser = Astro.locals.user;
const caller = await createServerCaller(Astro.request);
const courseId = Astro.params.id!;
const mentorUsername = Astro.url.searchParams.get("mentor");
const studentUsername = Astro.url.searchParams.get("student");

if (!currentUser) return null;

const [piechart, barchart, _mentees, mentors, linechart, courses]: any = await Promise.all([
  caller.statistics.getPiechartData({ courseId, mentorUsername }),
  caller.statistics.getBarchartData({ courseId, mentorUsername }),
  caller.statistics.getAllMentees({ courseId, mentorUsername }),
  caller.statistics.getAllMentors({ courseId }),
  caller.statistics.getLinechartData,
  {
    courseId,
    mentorUsername,
    // todo: fix this
    menteesCount: 0,
  },
  caller.courses.getAllCourses(),
]);

const mentees: any = _mentees;
const data = courses.data;

let loaderValue = "0%";
if (piechart?.data && Array.isArray(piechart?.data)) {
  const completed = piechart.data[0] || 0;
  const total = (piechart.data[0] || 0) + (piechart.data[1] || 0);
  loaderValue = total > 0 ? `${Math.round((completed * 100) / total)}%` : "0%";
}

const studentData = await caller.statistics.studentBarchartData({
  courseId,
  studentUsername,
});
const attendanceData = await caller.statistics.studentHeatmapData({
  courseId,
  studentUsername,
});
---

<RootLayout title="Statistics">
  <TutorStats
    mentors={mentors}
    mentees={mentees}
    data={data}
    currentUser={currentUser}
    courseId={courseId}
    studentUsername={studentUsername}
    studentData={studentData}
    attendanceData={attendanceData}
    piechart={piechart}
    linechart={linechart}
    barchart={barchart}
    loaderValue={loaderValue}
    client:load
  />
</RootLayout>
