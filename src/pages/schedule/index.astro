---
import RootLayout from "@/layouts/RootLayout.astro";
import ScheduleLayout from "./_components/ScheduleLayout.tsx";
import db from "@/lib/db";

// Normalize the date to start of day
const queryDate = Astro.url.searchParams.get("date");
const today = new Date();
today.setHours(0, 0, 0, 0);
const date = queryDate ? new Date(queryDate) : today;
date.setHours(0, 0, 0, 0);

const currentUser = Astro.locals.user!;
const haveAdminAccess = currentUser.role === "INSTRUCTOR" || currentUser.role === "ADMIN";

const [events, courses] = await Promise.all([
  db.scheduleEvent.findMany({
    where: {
      AND: [
        {
          startTime: {
            gte: date,
          },
        },
        {
          startTime: {
            lt: new Date(date.getTime() + 24 * 60 * 60 * 1000),
          },
        },
      ],
      course: {
        enrolledUsers: {
          some: { username: currentUser.username },
        },
      },
    },
    include: {
      attachments: {
        orderBy: {
          ordering: "asc",
        },
      },
      course: {
        select: {
          id: true,
          title: true,
        },
      },
    },
  }),
  db.course.findMany({
    where: {
      enrolledUsers: {
        some: { username: currentUser.username },
      },
    },
    select: {
      id: true,
      title: true,
    },
  }),
]);

const eventsWithAccess = events.map((event) => ({
  ...event,
  haveAdminAccess,
}));
---

<RootLayout title="Schedule">
  <ScheduleLayout
    client:load
    initialEvents={eventsWithAccess}
    courses={courses}
    haveAdminAccess={haveAdminAccess}
  />
</RootLayout>
