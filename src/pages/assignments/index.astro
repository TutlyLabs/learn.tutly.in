---
import db from "@/lib/db";
import RootLayout from "@layouts/RootLayout.astro";
import AssignmentBoard from "./_components/AssignmentBoard";
import NoDataFound from "@/components/NoDataFound";

const currentuser = Astro.locals.user;
if (!currentuser) return null;

const coursesData = await db.course.findMany({
  where: {
    enrolledUsers: {
      some: {
        username: currentuser.username,
      },
    },
  },
  include: {
    classes: true,
    createdBy: {
      select: {
        id: true,
        username: true,
        name: true,
        image: true,
        email: true,
        role: true,
        createdAt: true,
        updatedAt: true,
      },
    },
    _count: {
      select: {
        classes: true,
      },
    },
    courseAdmins: {
      select: {
        id: true,
        username: true,
        name: true,
        image: true,
        email: true,
        role: true,
        createdAt: true,
        updatedAt: true,
      },
    },
  },
});

coursesData.forEach((course) => {
  course.classes.sort((a, b) => {
    return Number(a.createdAt) - Number(b.createdAt);
  });
});
const publishedCourses = coursesData.filter((course) => course.isPublished);
const courses = currentuser.role === "INSTRUCTOR" ? coursesData : publishedCourses;

const assignments = await db.course.findMany({
  where: {
    enrolledUsers: {
      some: {
        username: currentuser.username,
      },
    },
  },
  select: {
    id: true,
    classes: {
      select: {
        attachments: {
          where: {
            attachmentType: "ASSIGNMENT",
          },
          include: {
            class: true,
            submissions: {
              where: {
                enrolledUser: {
                  username: currentuser.username,
                },
              },
              include: {
                points: true,
              },
            },
          },
        },
      },
      orderBy: {
        createdAt: "asc",
      },
    },
  },
});
---

<RootLayout title="Assignments">
  <div class="mx-2 flex flex-col gap-4 px-2 py-2 md:mx-14 md:px-8">
    <h1 class="py-2 text-center text-xl font-bold">ASSIGNMENTS</h1>

    {
      !courses || courses.length === 0 ? (
        <div class="mt-20 p-4 text-center font-semibold">
          <NoDataFound message="No Assignments available" />
        </div>
      ) : (
        <AssignmentBoard reviewed={true} courses={courses} assignments={assignments} client:load />
      )
    }
  </div>
</RootLayout>
