---
import RootLayout from "@/layouts/RootLayout.astro";
import db from "@/lib/db";
import ResizablePanelLayout from "@/pages/assignments/_components/ResizablePanelLayout";

const assignmentId = Astro.params.id!;
const submissionId = Astro.url.searchParams.get("submissionId");
const username = Astro.url.searchParams.get("username");
const user = Astro.locals.user;

if (user?.role === "STUDENT") {
  return Astro.redirect(`/assignments/${assignmentId}`);
}

const assignment = await db.attachment.findUnique({
  where: {
    id: assignmentId,
  },
  include: {
    class: {
      include: {
        course: true,
      },
    },
  },
});
const assignmenttemp = await db.attachment.findUnique({
  where: {
    id: assignmentId!,
  },
});

const submissions = await db.submission.findMany({
  where: {
    attachmentId: assignmentId!,
  },
  include: {
    enrolledUser: {
      include: {
        user: true,
      },
    },
    points: true,
    assignment: true,
  },
  orderBy: {
    enrolledUser: {
      username: "asc",
    },
  },
});

let filteredSubmissions: any[] = [];

if (user?.role === "INSTRUCTOR") {
  filteredSubmissions = submissions;
}

if (user?.role === "MENTOR") {
  filteredSubmissions = submissions.filter(
    (submission) => submission.enrolledUser.mentorUsername === user.username
  );
}

if (assignmenttemp?.maxSubmissions && assignmenttemp.maxSubmissions > 1) {
  const submissionCount = await db.submission.groupBy({
    by: ["enrolledUserId"],
    where: {
      attachmentId: assignmentId!,
    },
    _count: {
      id: true,
    },
  });

  filteredSubmissions.forEach((submission) => {
    const submissionCountData = submissionCount.find(
      (data) => data.enrolledUserId === submission.enrolledUserId
    );
    if (submissionCountData) {
      submission.submissionCount = submissionCountData._count.id;
    }
  });

  filteredSubmissions.forEach((submission) => {
    submission.submissionIndex = 1;
    if (submission.submissionCount && submission.submissionCount > 1) {
      const submissionIndex =
        submissions
          .filter((sub) => sub.enrolledUserId === submission.enrolledUserId)
          .findIndex((sub) => sub.id === submission.id) || 0;
      submission.submissionIndex = submissionIndex + 1;
    }
  });
}

if (username) {
  filteredSubmissions =
    filteredSubmissions &&
    filteredSubmissions.filter((submission: any) => submission?.enrolledUser.username == username);
}

const submission = filteredSubmissions.find((submission: any) => submission?.id == submissionId);
---

<RootLayout title="Evaluate" forceClose={true}>
  <ResizablePanelLayout
    assignmentId={assignmentId}
    assignment={assignment}
    submissions={filteredSubmissions}
    submissionId={submissionId}
    username={username}
    submission={submission}
    client:only="react"
  />
</RootLayout>
